### Starting build.
# Target: test.ml.depends, tags: { package(ANSITerminal), package(ounit2), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules test.ml > test.ml.depends
# Target: game.mli.depends, tags: { package(ANSITerminal), package(ounit2), debug, extension:mli, file:game.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules game.mli > game.mli.depends # cached
# Target: tile.mli.depends, tags: { package(ANSITerminal), package(ounit2), debug, extension:mli, file:tile.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules tile.mli > tile.mli.depends # cached
# Target: tile.cmi, tags: { package(ANSITerminal), package(ounit2), byte, compile, debug, extension:mli, file:tile.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package ANSITerminal -o tile.cmi tile.mli # cached
# Target: game.cmi, tags: { package(ANSITerminal), package(ounit2), byte, compile, debug, extension:mli, file:game.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package ANSITerminal -o game.cmi game.mli # cached
# Target: player.mli.depends, tags: { package(ANSITerminal), package(ounit2), debug, extension:mli, file:player.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package ounit2 -package ANSITerminal -modules player.mli > player.mli.depends # cached
# Target: player.cmi, tags: { package(ANSITerminal), package(ounit2), byte, compile, debug, extension:mli, file:player.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package ANSITerminal -o player.cmi player.mli # cached
# Target: test.cmo, tags: { package(ANSITerminal), package(ounit2), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package ounit2 -package ANSITerminal -o test.cmo test.ml
+ ocamlfind ocamlc -c -g -package ounit2 -package ANSITerminal -o test.cmo test.ml
File "test.ml", line 46, characters 24-26:
46 | let (tile1 : Tile.t) = {id = 1; kind = Man; number = 1; discarded = false}
                             ^^
Error: Unbound record field id
Command exited with code 2.
# Compilation unsuccessful.
